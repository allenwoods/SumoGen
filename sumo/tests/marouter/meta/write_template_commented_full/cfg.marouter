<?xml version="1.0" encoding="UTF-8"?>

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://sumo.dlr.de/xsd/marouterConfiguration.xsd">

    <configuration>
        <!-- Loads the named config on startup -->
        <configuration-file value="" synonymes="c configuration" type="FILE"/>

        <!-- Saves current configuration into FILE -->
        <save-configuration value="" synonymes="save-config" type="FILE"/>

        <!-- Saves a configuration template (empty) into FILE -->
        <save-template value="" type="FILE"/>

        <!-- Saves the configuration schema into FILE -->
        <save-schema value="" type="FILE"/>

        <!-- Adds comments to saved template, configuration, or schema -->
        <save-commented value="" synonymes="save-template.commented" type="BOOL"/>

    </configuration>

    <input>
        <!-- Use FILE as SUMO-network to route on -->
        <net-file value="" synonymes="n net" type="FILE"/>

        <!-- Read additional network data (districts, bus stops) from FILE -->
        <additional-files value="" synonymes="additional d districts taz-files" type="FILE"/>

        <!-- Loads O/D-files from FILE(s) -->
        <od-matrix-files value="" synonymes="m od-files" type="FILE"/>

        <!-- Loads O/D-matrix in Amitran format from FILE(s) -->
        <od-amitran-files value="" synonymes="amitran amitran-files" type="FILE"/>

        <!-- Read sumo-routes or trips from FILE(s) -->
        <route-files value="" synonymes="r routes trip-files trips" type="FILE"/>

        <!-- Read network weights from FILE(s) -->
        <weight-files value="" synonymes="w weights" type="FILE"/>

        <!-- Read lane-based network weights from FILE(s) -->
        <lane-weight-files value="" type="FILE"/>

        <!-- Name of the xml attribute which gives the edge weight -->
        <weight-attribute value="traveltime" synonymes="measure x" type="STR"/>

        <!-- The travel time influence of prior intervals -->
        <weight-adaption value="0" type="FLOAT"/>

        <!-- Parameter key(s) defining source (and sink) taz -->
        <taz-param value="" type="STR"/>

    </input>

    <output>
        <!-- Prefix which is applied to all output files. The special string &apos;TIME&apos; is replaced by the current time. -->
        <output-prefix value="" type="STR"/>

        <!-- Write flow definitions with route distributions to FILE -->
        <output-file value="" synonymes="o output" type="FILE"/>

        <!-- Write used vehicle types into separate FILE -->
        <vtype-output value="" type="FILE"/>

        <!-- Does not save vtype information -->
        <ignore-vehicle-type value="false" synonymes="no-vtype" type="BOOL"/>

        <!-- Writes edge loads and final costs into FILE -->
        <netload-output value="" type="FILE"/>

        <!-- Writes complete distance matrix into FILE -->
        <all-pairs-output value="" type="FILE"/>

        <!-- Write exit times (weights) for each edge -->
        <exit-times value="false" type="BOOL"/>

    </output>

    <processing>
        <!-- Defines the time interval when aggregating single vehicle input; Defaults to one hour -->
        <aggregation-interval value="3600" type="TIME"/>

        <!-- Continue if a route could not be build -->
        <ignore-errors value="false" synonymes="continue-on-unbuild dismiss-loading-errors" type="BOOL"/>

        <!-- Prune the number of alternatives to INT -->
        <max-alternatives value="5" type="INT"/>

        <!-- Interpolate edge weights at interval boundaries -->
        <weights.interpolate value="false" synonymes="interpolate" type="BOOL"/>

        <!-- Expand weights behind the simulation&apos;s end -->
        <weights.expand value="false" synonymes="expand-weights" type="BOOL"/>

        <!-- Select among routing algorithms [&apos;dijkstra&apos;, &apos;astar&apos;, &apos;CH&apos;, &apos;CHWrapper&apos;] -->
        <routing-algorithm value="dijkstra" type="STR"/>

        <!-- Aggregate routing queries with the same origin for different vehicle types -->
        <bulk-routing.vtypes value="false" type="BOOL"/>

        <!-- The number of parallel execution threads used for routing -->
        <routing-threads value="0" type="INT"/>

        <!-- Aggregation period for the given weight files; triggers rebuilding of Contraction Hierarchy -->
        <weight-period value="3600" type="TIME"/>

        <!-- Scales the loaded flows by FLOAT -->
        <scale value="1" synonymes="s" type="FLOAT"/>

        <!-- Defines the name of the vehicle type to use -->
        <vtype value="" type="STR"/>

        <!-- Defines the prefix for vehicle flow names -->
        <prefix value="" type="STR"/>

        <!-- Uses STR as a timeline definition -->
        <timeline value="" type="STR"/>

        <!-- Uses STR as a 24h-timeline definition -->
        <timeline.day-in-hours value="false" type="BOOL"/>

        <!-- Keep traffic flows of all time slots in the net -->
        <additive-traffic value="false" type="BOOL"/>

        <!-- Choose a assignment method: incremental, UE or SUE -->
        <assignment-method value="incremental" type="STR"/>

        <!-- Use FLOAT as tolerance when checking for SUE stability -->
        <tolerance value="0.001" type="FLOAT"/>

        <!-- Use left-turn penalty FLOAT to calculate link travel time when searching routes -->
        <left-turn-penalty value="0" type="FLOAT"/>

        <!-- Use INTEGER as the number of paths needed to be searched for each OD pair at each iteration -->
        <paths value="1" type="INT"/>

        <!-- Penalize existing routes with FLOAT to find secondary routes -->
        <paths.penalty value="1" type="FLOAT"/>

        <!-- Use FLOAT as the upper bound to determine auxiliary link cost -->
        <upperbound value="0.5" synonymes="upper" type="FLOAT"/>

        <!-- Use FLOAT as the lower bound to determine auxiliary link cost -->
        <lowerbound value="0.15" synonymes="lower" type="FLOAT"/>

        <!-- maximal number of iterations for new route searching in incremental and stochastic user assignment -->
        <max-iterations value="20" synonymes="i" type="INT"/>

        <!-- maximal number of inner iterations for user equilibrium calcuation in the stochastic user assignment -->
        <max-inner-iterations value="1000" type="INT"/>

        <!-- Choose a route choice method: gawron, logit, or lohse -->
        <route-choice-method value="logit" type="STR"/>

        <!-- Use FLOAT as Gawron&apos;s beta -->
        <gawron.beta value="0.3" synonymes="gBeta" type="FLOAT"/>

        <!-- Use FLOAT as Gawron&apos;s a -->
        <gawron.a value="0.05" synonymes="gA" type="FLOAT"/>

        <!-- Save routes with near zero probability -->
        <keep-all-routes value="false" type="BOOL"/>

        <!-- Only reuse routes from input, do not calculate new ones -->
        <skip-new-routes value="false" type="BOOL"/>

        <!-- Use FLOAT as (c-)logit&apos;s beta for the commonality factor -->
        <logit.beta value="0.15" synonymes="lBeta" type="FLOAT"/>

        <!-- Use FLOAT as (c-)logit&apos;s gamma for the commonality factor -->
        <logit.gamma value="1" synonymes="lGamma" type="FLOAT"/>

        <!-- Use FLOAT as (c-)logit&apos;s theta -->
        <logit.theta value="0.01" synonymes="lTheta" type="FLOAT"/>

    </processing>

    <defaults>
        <!-- Assigns a default depart lane -->
        <flow-output.departlane value="free" synonymes="departlane" type="STR"/>

        <!-- Assigns a default depart position -->
        <flow-output.departpos value="" synonymes="departpos" type="STR"/>

        <!-- Assigns a default depart speed -->
        <flow-output.departspeed value="max" synonymes="departspeed" type="STR"/>

        <!-- Assigns a default arrival lane -->
        <flow-output.arrivallane value="" synonymes="arrivallane" type="STR"/>

        <!-- Assigns a default arrival position -->
        <flow-output.arrivalpos value="" synonymes="arrivalpos" type="STR"/>

        <!-- Assigns a default arrival speed -->
        <flow-output.arrivalspeed value="" synonymes="arrivalspeed" type="STR"/>

    </defaults>

    <time>
        <!-- Defines the begin time; Previous trips will be discarded -->
        <begin value="0" synonymes="b" type="TIME"/>

        <!-- Defines the end time; Later trips will be discarded; Defaults to the maximum time that SUMO can represent -->
        <end value="9223372036854774" synonymes="e" type="TIME"/>

    </time>

    <report>
        <!-- Switches to verbose output -->
        <verbose value="false" synonymes="v" type="BOOL"/>

        <!-- Prints option values before processing -->
        <print-options value="false" type="BOOL"/>

        <!-- Prints this screen -->
        <help value="false" synonymes="?" type="BOOL"/>

        <!-- Prints the current version -->
        <version value="false" synonymes="V" type="BOOL"/>

        <!-- Set schema validation scheme of XML inputs (&quot;never&quot;, &quot;auto&quot; or &quot;always&quot;) -->
        <xml-validation value="auto" synonymes="X" type="STR"/>

        <!-- Set schema validation scheme of SUMO network inputs (&quot;never&quot;, &quot;auto&quot; or &quot;always&quot;) -->
        <xml-validation.net value="never" type="STR"/>

        <!-- Disables output of warnings -->
        <no-warnings value="false" synonymes="W suppress-warnings" type="BOOL"/>

        <!-- Writes all messages to FILE (implies verbose) -->
        <log value="" synonymes="l log-file" type="FILE"/>

        <!-- Writes all non-error messages to FILE (implies verbose) -->
        <message-log value="" type="FILE"/>

        <!-- Writes all warnings and errors to FILE -->
        <error-log value="" type="FILE"/>

    </report>

    <random_number>
        <!-- Initialises the random number generator with the current system time -->
        <random value="false" synonymes="abs-rand" type="BOOL"/>

        <!-- Initialises the random number generator with the given value -->
        <seed value="23423" synonymes="srand" type="INT"/>

    </random_number>

</configuration>
