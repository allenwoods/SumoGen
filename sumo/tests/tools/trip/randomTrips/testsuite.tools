simple

# fractional depart times
fractional

# make sure that source and sink are a minimum distance appart
minimum_distance
minimum_distance_exceeded

# increase the probability for trips to start and end at the fringe of the network.
# For this test, the turnarounds at the fringe have been removed since the fringe is detected by limited connectivity
fringe_factor

# detected the fringe despite turnarounds
fringe_factor_turnarounds

# consider vehicle class when picking source- and destination edges if option --vclass is used
vclass

# load the vehicle class to use during routing from an additional file
vclass_additional_file

# test trips with intermediate waypoints
intermediate

# write weights for visualization
weights_output

# load some weights
loaded_weights
no_valid_edges
no_valid_intermediate_edges

# option --intermediate is given but no intermediate edges are available
no_valid_intermediate_edges_fail
pedestrians

# use binomially distributed arrivals
binomial

# generate validated trips
validate
