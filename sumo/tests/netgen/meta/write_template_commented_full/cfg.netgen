<?xml version="1.0" encoding="UTF-8"?>

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://sumo.dlr.de/xsd/netgenerateConfiguration.xsd">

    <configuration>
        <!-- Loads the named config on startup -->
        <configuration-file value="" synonymes="c configuration" type="FILE"/>

        <!-- Saves current configuration into FILE -->
        <save-configuration value="" synonymes="save-config" type="FILE"/>

        <!-- Saves a configuration template (empty) into FILE -->
        <save-template value="" type="FILE"/>

        <!-- Saves the configuration schema into FILE -->
        <save-schema value="" type="FILE"/>

        <!-- Adds comments to saved template, configuration, or schema -->
        <save-commented value="" synonymes="save-template.commented" type="BOOL"/>

    </configuration>

    <grid_network>
        <!-- Forces NETGEN to build a grid-like network -->
        <grid value="false" synonymes="g grid-net" type="BOOL"/>

        <!-- The number of junctions in both dirs -->
        <grid.number value="5" synonymes="grid-number number" type="INT"/>

        <!-- The length of streets in both dirs -->
        <grid.length value="100" synonymes="grid-length length" type="FLOAT"/>

        <!-- The number of junctions in x-dir; Overrides --grid-number -->
        <grid.x-number value="5" synonymes="grid-x-number x-no" type="INT"/>

        <!-- The number of junctions in y-dir; Overrides --grid-number -->
        <grid.y-number value="5" synonymes="grid-y-number y-no" type="INT"/>

        <!-- The length of horizontal streets; Overrides --grid-length -->
        <grid.x-length value="100" synonymes="grid-x-length x-length" type="FLOAT"/>

        <!-- The length of vertical streets; Overrides --grid-length -->
        <grid.y-length value="100" synonymes="grid-y-length y-length" type="FLOAT"/>

        <!-- The length of streets attached at the boundary; 0 means no streets are attached -->
        <grid.attach-length value="0" synonymes="attach-length" type="FLOAT"/>

        <!-- The Ids of generated nodes use letters for the X axis -->
        <grid.alphanumerical-ids value="false" type="BOOL"/>

    </grid_network>

    <spider_network>
        <!-- Forces NETGEN to build a spider-net-like network -->
        <spider value="false" synonymes="s spider-net" type="BOOL"/>

        <!-- The number of axes within the net -->
        <spider.arm-number value="13" synonymes="arms spider-arm-number" type="INT"/>

        <!-- The number of circles of the net -->
        <spider.circle-number value="20" synonymes="circles spider-circle-number" type="INT"/>

        <!-- The distances between the circles -->
        <spider.space-radius value="100" synonymes="radius spider-space-rad" type="FLOAT"/>

        <!-- Omit the central node of the network -->
        <spider.omit-center value="false" synonymes="nocenter spider-omit-center" type="BOOL"/>

    </spider_network>

    <random_network>
        <!-- Forces NETGEN to build a random network -->
        <rand value="false" synonymes="r random-net" type="BOOL"/>

        <!-- Describes how many times an edge shall be added to the net -->
        <rand.iterations value="2000" synonymes="iterations rand-iterations" type="INT"/>

        <!-- Defines the probability to build a reverse edge -->
        <rand.bidi-probability value="1" synonymes="bidi rand-bidi-probability" type="FLOAT"/>

        <!-- The maximum distance for each edge -->
        <rand.max-distance value="250" synonymes="max-dist rand-max-distance" type="FLOAT"/>

        <!-- The minimum distance for each edge -->
        <rand.min-distance value="100" synonymes="min-dist rand-min-distance" type="FLOAT"/>

        <!-- The minimum angle for each pair of (bidirectional) roads -->
        <rand.min-angle value="0.785398" synonymes="min-angle rand-min-anglee" type="FLOAT"/>

        <!-- The number of tries for creating each node -->
        <rand.num-tries value="50" synonymes="num-tries rand-num-tries" type="INT"/>

        <!-- Probability for roads to continue at each node -->
        <rand.connectivity value="0.95" synonymes="connectivity rand-connectivity" type="FLOAT"/>

        <!-- Probability for a node having exactly 1 neighbor -->
        <rand.neighbor-dist1 value="0" synonymes="dist1 rand-neighbor-dist1" type="FLOAT"/>

        <!-- Probability for a node having exactly 2 neighbors -->
        <rand.neighbor-dist2 value="0" synonymes="dist2 rand-neighbor-dist2" type="FLOAT"/>

        <!-- Probability for a node having exactly 3 neighbors -->
        <rand.neighbor-dist3 value="10" synonymes="dist3 rand-neighbor-dist3" type="FLOAT"/>

        <!-- Probability for a node having exactly 4 neighbors -->
        <rand.neighbor-dist4 value="10" synonymes="dist4 rand-neighbor-dist4" type="FLOAT"/>

        <!-- Probability for a node having exactly 5 neighbors -->
        <rand.neighbor-dist5 value="2" synonymes="dist5 rand-neighbor-dist5" type="FLOAT"/>

        <!-- Probability for a node having exactly 6 neighbors -->
        <rand.neighbor-dist6 value="1" synonymes="dist6 rand-neighbor-dist6" type="FLOAT"/>

    </random_network>

    <output>
        <!-- Prefix which is applied to all output files. The special string &apos;TIME&apos; is replaced by the current time. -->
        <output-prefix value="" type="STR"/>

        <!-- The generated net will be written to FILE -->
        <output-file value="" synonymes="o output sumo-output" type="FILE"/>

        <!-- Prefix of files to write plain xml nodes, edges and connections to -->
        <plain-output-prefix value="" synonymes="plain plain-output" type="FILE"/>

        <!-- Writes information about joined junctions to FILE (can be loaded as additional node-file to reproduce joins -->
        <junctions.join-output value="" type="FILE"/>

        <!-- The generated net will be written to FILE using Amitran format -->
        <amitran-output value="" type="FILE"/>

        <!-- The generated net will be written to FILE using MATsim format -->
        <matsim-output value="" type="FILE"/>

        <!-- The generated net will be written to FILE using OpenDRIVE format -->
        <opendrive-output value="" type="FILE"/>

        <!-- The generated net will be written to dlr-navteq files with the given PREFIX -->
        <dlr-navteq-output value="" type="FILE"/>

        <!-- Street names will be included in the output (if available) -->
        <output.street-names value="false" type="BOOL"/>

        <!-- Writes original names, if given, as parameter -->
        <output.original-names value="false" type="BOOL"/>

        <!-- Writes street signs as POIs to FILE -->
        <street-sign-output value="" type="FILE"/>

    </output>

    <tls_building>
        <!-- Interprets STR as list of junctions to be controlled by TLS -->
        <tls.set value="" synonymes="explicite-tls" type="STR"/>

        <!-- Interprets STR as list of junctions to be not controlled by TLS -->
        <tls.unset value="" synonymes="explicite-no-tls" type="STR"/>

        <!-- Turns on TLS guessing -->
        <tls.guess value="false" synonymes="guess-tls" type="BOOL"/>

        <!-- Includes node clusters into guess -->
        <tls-guess.joining value="false" type="BOOL"/>

        <!-- Tries to cluster tls-controlled nodes -->
        <tls.join value="false" synonymes="try-join-tls" type="BOOL"/>

        <!-- Determines the maximal distance for joining traffic lights (defaults to 20) -->
        <tls.join-dist value="20" type="FLOAT"/>

        <!-- Do not control edges that lie fully within a joined traffic light. This may cause collisions but allows old traffic light plans to be used -->
        <tls.uncontrolled-within value="false" type="BOOL"/>

        <!-- Use INT as cycle duration -->
        <tls.cycle.time value="90" type="INT"/>

        <!-- Use INT as green phase duration -->
        <tls.green.time value="31" synonymes="traffic-light-green" type="INT"/>

        <!-- Defines smallest vehicle deceleration -->
        <tls.yellow.min-decel value="3" synonymes="D min-decel" type="FLOAT"/>

        <!-- Given yellow times are patched even if being too short -->
        <tls.yellow.patch-small value="false" synonymes="patch-small-tyellow" type="BOOL"/>

        <!-- Set INT as fixed time for yellow phase durations -->
        <tls.yellow.time value="" synonymes="traffic-light-yellow" type="INT"/>

        <!-- Use INT as green phase duration for left turns (s) -->
        <tls.left-green.time value="6" type="INT"/>

        <!-- TLSs in STR will be shifted by half-phase -->
        <tls.half-offset value="" synonymes="tl-logics.half-offset" type="STR"/>

        <!-- TLSs in STR will be shifted by quarter-phase -->
        <tls.quarter-offset value="" synonymes="tl-logics.quarter-offset" type="STR"/>

        <!-- TLSs with unspecified type will use STR as their algorithm -->
        <tls.default-type value="static" type="STR"/>

    </tls_building>

    <edge_removal>
        <!-- Only keep edges with speed in meters/second &gt; FLOAT -->
        <keep-edges.min-speed value="" synonymes="edges-min-speed" type="FLOAT"/>

        <!-- Remove edges in STR -->
        <remove-edges.explicit value="" synonymes="remove-edges" type="STR"/>

        <!-- Only keep edges in STR -->
        <keep-edges.explicit value="" synonymes="keep-edges" type="STR"/>

        <!-- Only keep edges in FILE (Each id on a single line. Selection files from SUMO-GUI are also supported) -->
        <keep-edges.input-file value="" type="FILE"/>

        <!-- Remove edges in FILE. (Each id on a single line. Selection files from SUMO-GUI are also supported) -->
        <remove-edges.input-file value="" type="FILE"/>

        <!-- Only keep edges which are located within the given boundary (given either as CARTESIAN corner coordinates &lt;xmin,ymin,xmax,ymax&gt; or as polygon &lt;x0,y0,x1,y1,...&gt;) -->
        <keep-edges.in-boundary value="" type="STR"/>

        <!-- Only keep edges which are located within the given boundary (given either as GEODETIC corner coordinates &lt;lon-min,lat-min,lon-max,lat-max&gt; or as polygon &lt;lon0,lat0,lon1,lat1,...&gt;) -->
        <keep-edges.in-geo-boundary value="" type="STR"/>

    </edge_removal>

    <unregulated_nodes>
        <!-- All nodes will be unregulated -->
        <keep-nodes-unregulated value="false" synonymes="keep-unregulated" type="BOOL"/>

        <!-- Do not regulate nodes in STR -->
        <keep-nodes-unregulated.explicit value="" synonymes="keep-unregulated.explicit keep-unregulated.nodes" type="STR"/>

        <!-- Do not regulate district nodes -->
        <keep-nodes-unregulated.district-nodes value="false" synonymes="keep-unregulated.district-nodes" type="BOOL"/>

    </unregulated_nodes>

    <processing>
        <!-- Omits internal links -->
        <no-internal-links value="false" type="BOOL"/>

        <!-- Remaps alphanumerical IDs of nodes and edges to ensure that all IDs are integers -->
        <numerical-ids value="false" type="BOOL"/>

        <!-- Disables building turnarounds -->
        <no-turnarounds value="false" type="BOOL"/>

        <!-- Disables building turnarounds at tls-controlled junctions -->
        <no-turnarounds.tls value="false" synonymes="no-tls-turnarounds" type="BOOL"/>

        <!-- Disables building connections to left -->
        <no-left-connections value="false" type="BOOL"/>

        <!-- Turn off normalizing node positions -->
        <offset.disable-normalization value="false" synonymes="disable-normalize-node-positions" type="BOOL"/>

        <!-- Adds FLOAT to net x-positions -->
        <offset.x value="0" synonymes="x-offset-to-apply" type="FLOAT"/>

        <!-- Adds FLOAT to net y-positions -->
        <offset.y value="0" synonymes="y-offset-to-apply" type="FLOAT"/>

        <!-- Flips the y-coordinate along zero -->
        <flip-y-axis value="false" synonymes="flip-y" type="BOOL"/>

        <!-- Enable roundabout-guessing -->
        <roundabouts.guess value="false" synonymes="guess-roundabouts" type="BOOL"/>

        <!-- Enable guessing of opposite direction lanes usable for overtaking -->
        <opposites.guess value="false" type="BOOL"/>

        <!-- Assumes left-hand traffic on the network -->
        <lefthand value="false" type="BOOL"/>

        <!-- Merges edges which connect the same nodes and are close to each other (recommended for VISSIM import) -->
        <edges.join value="false" type="BOOL"/>

        <!-- Joins junctions that are close to each other (recommended for OSM import) -->
        <junctions.join value="false" type="BOOL"/>

        <!-- Determines the maximal distance for joining junctions (defaults to 10) -->
        <junctions.join-dist value="10" type="FLOAT"/>

        <!-- Generate INT intermediate points to smooth out intersection corners -->
        <junctions.corner-detail value="0" type="INT"/>

        <!-- Generate INT intermediate points to smooth out lanes within the intersection -->
        <junctions.internal-link-detail value="5" type="INT"/>

        <!-- Allow driving onto a multi-lane road if there are foes on other lanes (at roundabouts) -->
        <check-lane-foes.roundabout value="true" type="BOOL"/>

        <!-- Allow driving onto a multi-lane road if there are foes on other lanes (everywhere) -->
        <check-lane-foes.all value="false" type="BOOL"/>

        <!-- Guess pedestrian sidewalks based on edge speed -->
        <sidewalks.guess value="false" type="BOOL"/>

        <!-- Add sidewalks for edges with a speed equal or below the given limit -->
        <sidewalks.guess.max-speed value="13.89" type="FLOAT"/>

        <!-- Add sidewalks for edges with a speed above the given limit -->
        <sidewalks.guess.min-speed value="5.8" type="FLOAT"/>

        <!-- Add sidewalks for edges that allow pedestrians on any of their lanes regardless of speed -->
        <sidewalks.guess.from-permissions value="false" type="BOOL"/>

        <!-- Do not guess sidewalks for the given list of edges -->
        <sidewalks.guess.exclude value="" type="STR"/>

        <!-- Guess pedestrian crossings based on the presence of sidewalks -->
        <crossings.guess value="false" type="BOOL"/>

        <!-- At uncontrolled nodes, do not build crossings across edges with a speed above the threshold -->
        <crossings.guess.speed-threshold value="13.89" type="FLOAT"/>

    </processing>

    <building_defaults>
        <!-- The default number of lanes in an edge -->
        <default.lanenumber value="1" synonymes="L lanenumber" type="INT"/>

        <!-- The default width of lanes -->
        <default.lanewidth value="-1" synonymes="lanewidth" type="FLOAT"/>

        <!-- The default speed on an edge (in m/s) -->
        <default.speed value="13.9" synonymes="S speed" type="FLOAT"/>

        <!-- The default priority of an edge -->
        <default.priority value="-1" synonymes="P priority" type="INT"/>

        <!-- The default width of added sidewalks -->
        <default.sidewalk-width value="2" type="FLOAT"/>

        <!-- Whether junctions should be kept clear by default -->
        <default.junctions.keep-clear value="true" type="BOOL"/>

        <!-- The default turning radius of intersections -->
        <default.junctions.radius value="1.5" type="FLOAT"/>

        <!-- [traffic_light|priority|right_before_left] Determines the type of the build junctions -->
        <default-junction-type value="" synonymes="j junctions" type="STR"/>

    </building_defaults>

    <report>
        <!-- Switches to verbose output -->
        <verbose value="false" synonymes="v" type="BOOL"/>

        <!-- Prints option values before processing -->
        <print-options value="false" type="BOOL"/>

        <!-- Prints this screen -->
        <help value="false" synonymes="?" type="BOOL"/>

        <!-- Prints the current version -->
        <version value="false" synonymes="V" type="BOOL"/>

        <!-- Set schema validation scheme of XML inputs (&quot;never&quot;, &quot;auto&quot; or &quot;always&quot;) -->
        <xml-validation value="auto" synonymes="X" type="STR"/>

        <!-- Set schema validation scheme of SUMO network inputs (&quot;never&quot;, &quot;auto&quot; or &quot;always&quot;) -->
        <xml-validation.net value="never" type="STR"/>

        <!-- Disables output of warnings -->
        <no-warnings value="false" synonymes="W suppress-warnings" type="BOOL"/>

        <!-- Writes all messages to FILE (implies verbose) -->
        <log value="" synonymes="l log-file" type="FILE"/>

        <!-- Writes all non-error messages to FILE (implies verbose) -->
        <message-log value="" type="FILE"/>

        <!-- Writes all warnings and errors to FILE -->
        <error-log value="" type="FILE"/>

    </report>

    <random_number>
        <!-- Initialises the random number generator with the current system time -->
        <random value="false" synonymes="abs-rand" type="BOOL"/>

        <!-- Initialises the random number generator with the given value -->
        <seed value="23423" synonymes="srand" type="INT"/>

    </random_number>

</configuration>
